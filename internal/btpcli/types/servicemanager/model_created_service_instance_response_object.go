/*
 * Service Manager
 *
 * Service Manager provides REST APIs that are responsible for the creation and consumption of service instances in any connected runtime environment.   Use the Service Manager APIs to perform various operations related to your platforms, service brokers, service instances, and service bindings.  Get service plans and service offerings associated with your environment.    #### Platforms   Platforms are OSBAPI-enabled software systems on which applications and services are hosted.   With the Service Manager, you can now register your platform and enable it to consume the SAP BTP services from your native environment.   This registration results in a returned set of credentials that are needed to deploy the Service Manager agent.     #### Service Brokers   Service brokers act as brokers between the Service Manager and a platform’s marketplace to advertise catalogues of service offerings and service plans.  They also receive and process the requests from the marketplace to provision, bind, unbind, and deprovision these offerings and plans.    #### Service Instances   Service instances are instantiations of service plans that make the functionality of those service plans available for consumption.    #### Service Bindings   Service bindings provide access details to existing service instances.  The access details are part of the service bindings' ‘credentials’ property, and typically include access URLs and credentials.    #### Service Plans   Service plans represent sets of capabilities provided by a service offering.  For example, database service offerings provide different plans for different database versions or sizes, while the Service Manager plans offer different data access levels.    #### Service Offerings   Service offerings are advertisements of the services that are supported by a service broker.  For example, software that you can consume in the subaccount.  Service offerings are related to one or more service plans.
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package servicemanager

import (
	"encoding/json"
	"time"
)

type CreatedServiceInstanceResponseObject struct {
	// The ID of the service instance.
	Id string `json:"id,omitempty"`
	// Whether the service instance is ready for consumption.
	Ready bool `json:"ready,omitempty"`
	// The name of the service instance.
	Name string `json:"name,omitempty"`
	// The ID of the serivce plan associated with the service instance.
	ServicePlanId string `json:"service_plan_id,omitempty"`
	// The ID of the platform associated with the service instance.
	PlatformId string `json:"platform_id,omitempty"`
	// The URL of the web-based management UI for the service instance.
	DashboardUrl string `json:"dashboard_url,omitempty"`
	// The ID of the instance to which the service instance refers.
	ReferencedInstanceId string `json:"referenced_instance_id,omitempty"`
	// Whether the service instance is shared.
	Shared bool `json:"shared,omitempty"`
	// Contextual data for the resource.
	Context json.RawMessage `json:"context,omitempty"`
	// The maintenance info associated with the service instance.
	MaintenanceInfo map[string]string `json:"maintenance_info,omitempty"`
	// Whether the resource can be used.
	Usable bool `json:"usable,omitempty"`
	// The time the service instance was created. <br/>In ISO 8601 format:</br> YYYY-MM-DDThh:mm:ssTZD
	CreatedAt time.Time `json:"created_at,omitempty"`
	// The last time the service instance was updated.<br/>In ISO 8601 format.
	UpdatedAt time.Time            `json:"updated_at,omitempty"`
	Labels    *map[string][]string `json:"labels,omitempty"`
}
